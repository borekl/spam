package SPAM::Model::SNMP;

# code for interfacing with SNMP and interpreting its data; this class needs to
# be instantiated on a per-host basis so that all indices are properly unique

use Moo;
use strict;
use warnings;
use experimental 'signatures';
use Carp;

use SPAM::Config;

with 'SPAM::MessageCallback';

# data retrieved from the host via SNMP; at this moment these are trees
# generated by snmp_get_object() and saved either under {MIB_NAME} or
# under {MIB_NAME}{VLAN_NO} (ie. the same was stored in %swdata). This should
# probably be improved upon later.
has _d => ( is => 'ro', default => sub {{}} );

with 'SPAM::Model::SNMP::PortToIfIndex';
with 'SPAM::Model::SNMP::Platform';
with 'SPAM::Model::SNMP::Location';
with 'SPAM::Model::SNMP::EntityTree';
with 'SPAM::Model::SNMP::IfIndexToPortIndex';
with 'SPAM::Model::SNMP::IfIndexToDot1d';
with 'SPAM::Model::SNMP::TrunkVlans';
with 'SPAM::Model::SNMP::ActiveVlans';

#------------------------------------------------------------------------------
# return true if ifTable AND ifXTable exist
sub has_iftable ($self)
{
  if(
    exists $self->_d->{'IF-MIB'} &&
    exists $self->_d->{'IF-MIB'}{'ifTable'} &&
    exists $self->_d->{'IF-MIB'}{'ifXTable'}
  ) {
    return 1;
  } else {
    return undef;
  }
}

1;
